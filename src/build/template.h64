## @module template
# Copyright (c) 2024, ellie/@ell1e & Horp Team (see AUTHORS.md).
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Alternatively, at your option, this file is offered under the Apache 2
# license, see accompanied LICENSE.md.

import argparse from core.horse64.org

import package.ref as ref

func actionparser_template(args, verbose=no) {
    var defs = argparse.ArgumentDefs(program_name="horp template",
        description="Instead of running the full build actions, "
        "just run the templating build step on the given package "
        "directory.")
    defs.add_arg(
        "package dir", description="The package directory "
        "in which to run teh templating build step.")
    defs.add_switch("--verbose", description="Output extra information "
        "when doing things.")
    var result = argparse.parse(defs, args)
    if result.output != "" {
        print(result.output)
        return result.exit_code
    }
    if result.args["--verbose"] {
        verbose = yes
    }
    var target_path = result.args["package dir"]
    var target_refs = ref.parse_and_locate_package_refs(
        result.args["package refs"], verbose=verbose
    ) later:

    do {
        await target_refs
    } rescue any as err {
        print("horp: error: Failed to resolve package refs: " +
            err.msg)
        print("Did you specify existing horp packages?")
    }
    print("Package refs: " + target_refs.as_str())
}

